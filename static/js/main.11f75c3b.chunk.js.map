{"version":3,"sources":["lib/firebase/index.js","api/players.ts","api/utils.ts","components/Players/Players.tsx","components/Home/Home.tsx","api/games.ts","components/PlayerName/usePlayerName.ts","components/PlayerName/PlayerName.tsx","components/GameForm/GameForm.tsx","components/DateText/DateText.tsx","components/Games/Games.tsx","components/WinRate/WinRate.tsx","components/PlayerProfile/PlayerProfile.tsx","components/Game/Game.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAllPlayers","database","ref","once","then","snapshot","val","getPlayerById","id","concat","addPlayer","_ref","name","push","set","key","arrayFromObject","obj","Object","keys","map","gamesByPlayerId","games","filter","game","player1Id","player2Id","playersPlayerPlayed","player","allGames","uniqueOpponentIds","forEach","opponentId","opponentForGame","indexOf","Players","_useState","useState","_useState2","slicedToArray","players","setPlayers","_useState3","_useState4","input","setInput","fetchAllPlayers","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","apply","this","arguments","useEffect","react_default","createElement","className","value","onChange","event","currentTarget","placeholder","onClick","disabled","length","_ref2","react_router_dom","to","Home","getLastNGames","n","limitToLast","usePlayerName","setName","PlayerName","GameForm","onAddGame","player1","setPlayer1","_useState5","_useState6","player2","setPlayer2","_useState7","undefined","_useState8","player1Score","setPlayer1Score","_useState9","_useState10","player2Score","setPlayer2Score","sortedPlayers","sort","b","button","winnerId","time","ServerValue","TIMESTAMP","addGame","Fragment","e","_ref3","type","max","min","Number","_ref4","DateText","date","style","color","fontSize","textTransform","letterSpacing","Date","moment","startOf","fromNow","timeFromNow","Games","setGames","fetchLast12Games","response","reverse","components_GameForm_GameForm","components_DateText_DateText","components_PlayerName_PlayerName","WinRate","gamesBetweenTwoPlayers","gamesBetweenPlayers","player1Wins","Math","round","PlayerProfile","match","info","setInfo","allGamesPlayed","setAllGamesPlayed","playersPlayed","setPlayersPlayed","userId","params","fetchAllGames","sortedGames","fetchAllOpponents","_callee2","opponentIds","_context2","_x","_x2","gamesPlayed","components_WinRate_WinRate","GamePage","history","gameId","setGame","removeGame","window","confirm","remove","deleteGame","marginBottom","format","dateFormat","Routes","react_router","exact","path","component","Game","Header","App","basename","process","components_Header_Header","Routes_Routes","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11f75c3b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyIdR5rJ6p-JX5BVMeoksBURFgAs5mD5U\",\n  authDomain: \"pool-party-app.firebaseapp.com\",\n  databaseURL: \"https://pool-party-app.firebaseio.com\",\n  projectId: \"pool-party-app\",\n  storageBucket: \"pool-party-app.appspot.com\",\n  messagingSenderId: \"875916367186\",\n  appId: \"1:875916367186:web:71a4c5d40ff62bda\"\n};\n\nexport default firebase.initializeApp(firebaseConfig);","import firebase from '../lib/firebase';\n\nexport const getAllPlayers = () => {\n  return firebase\n    .database()\n    .ref('players')\n    .once('value')\n    .then(snapshot => snapshot.val());\n}\n\nexport const getPlayerById = (id: string) => {\n  return firebase\n    .database()\n    .ref(`players/${id}`)\n    .once('value')\n    .then(snapshot => snapshot.val());\n}\n\ntype AddPlayer = (playerInfo: {name: string}) => Promise<any>;\nexport const addPlayer: AddPlayer = ({ name }) => {\n  const ref = firebase\n    .database()\n    .ref('players/')\n    .push();\n\n  return ref.set({\n    id: ref.key,\n    name,\n  });\n}","import { Game, Player } from \"./types\";\nimport moment from 'moment';\n\ninterface Obj {\n  [key: string]: any;\n}\n\nexport const arrayFromObject = (obj: Obj) =>\n  Object.keys(obj).map(key => obj[key]);\n\ntype GamesByPlayerId = (games: Game[], id: Player[\"id\"]) => Game[];\nexport const gamesByPlayerId: GamesByPlayerId = (games, id) =>\n  games.filter(game => game.player1Id === id || game.player2Id === id);\n\ntype GamesBetweenPlayers = (player1Id: Player['id'], player2Id: Player['id'], games: Game[]) => Game[];\nexport const gamesBetweenPlayers: GamesBetweenPlayers = (player1Id, player2Id, games) =>\n  games.filter(game => (\n    (game.player1Id === player1Id && game.player2Id === player2Id)\n    || \n    (game.player1Id === player2Id && game.player2Id === player1Id)\n  ));\n\ntype OpponentForGame = (player: Player, game: Game) => Player['id'];\nexport const opponentForGame: OpponentForGame = (player, game) => \n  (game.player1Id === player.id ? game.player2Id : game.player1Id);\n\ntype PlayersPlayerPlayed = (player: Player, allGames: Game[]) => Player['id'][];\nexport const playersPlayerPlayed: PlayersPlayerPlayed = (player, allGames) => {\n  const uniqueOpponentIds: Player['id'][] = [];\n  const gamesPlayerPlayed = gamesByPlayerId(allGames, player.id);\n\n  gamesPlayerPlayed.forEach(game => {\n    const opponentId = opponentForGame(player, game);\n    if (uniqueOpponentIds.indexOf(opponentId) < 0) {\n      uniqueOpponentIds.push(opponentId);\n    }\n  });\n\n  return uniqueOpponentIds;\n};\n\nexport const timeFromNow = (time: string) => {\n  const date = new Date(time);\n  const momentFormat = moment(date);\n\n  return momentFormat.startOf().fromNow();\n}\n\nexport const dateFormat = (time: string) => {\n  const date = new Date(time);\n  const momentFormat = moment(date).format('MMMM Do, YYYY - h:mm a');\n\n  return momentFormat;\n}","import React, { useState, useEffect } from \"react\";\n\nimport { getAllPlayers, addPlayer } from \"../../api/players\";\nimport { arrayFromObject } from \"../../api/utils\";\nimport { Player } from \"../../api/types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Players() {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchAllPlayers = async () => {\n    const players = await getAllPlayers();\n    setPlayers(arrayFromObject(players));\n  }\n\n  useEffect(() => {\n    fetchAllPlayers();\n  }, []);\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.currentTarget.value);\n  };\n\n  const submit = () => {\n    addPlayer({ name: input }).then(() => {\n      fetchAllPlayers();\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"Players\">\n      <h1>Players</h1>\n      <input\n        name=\"name\"\n        value={input}\n        onChange={onInputChange}\n        placeholder=\"Player name\"\n      />\n      <button onClick={submit} disabled={input.length < 1}>Add Player</button>\n      <ul>\n        {players.map(({id, name}) => (\n          <li key={id}>\n            <Link to={`/players/${id}`}>{name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Players;\n","import React from 'react';\n\nfunction Home() {\n  return <h1>Home</h1>\n}\n\nexport default Home;","import { database } from 'firebase';\nimport firebase from \"../lib/firebase\";\nimport { Game } from \"./types\";\nimport { Omit } from \"yargs\";\n\nexport const getAllGames = () => {\n  return firebase\n    .database()\n    .ref(\"games\")\n    .once(\"value\")\n    .then(snapshot => snapshot.val());\n};\n\nexport const getLastNGames = (n: number) => {\n  return firebase\n    .database()\n    .ref(\"games\")\n    .limitToLast(n)\n    .once(\"value\")\n    .then(snapshot => snapshot.val());\n};\n\nexport const getGameById = (id: string) => {\n  return firebase\n    .database()\n    .ref(`games/${id}`)\n    .once(\"value\")\n    .then(snapshot => snapshot.val());\n};\n\nexport type AddGame = (game: Omit<Game, 'id' | 'time'>) => Promise<any>;\nexport const addGame: AddGame = ({\n  player1Id,\n  player2Id,\n  player1Score,\n  player2Score,\n  winnerId\n}) => {\n  const ref = firebase\n    .database()\n    .ref(\"games/\")\n    .push();\n\n  return ref.set({\n    time: database.ServerValue.TIMESTAMP,\n    id: ref.key,\n    player1Id,\n    player2Id,\n    player1Score,\n    player2Score,\n    winnerId\n  });\n};\n\nexport const deleteGame = (gameId: string) => {\n  const ref = firebase.database().ref(`games/${gameId}`);\n  \n  return ref.remove();\n}\n","import { useState, useEffect } from \"react\";\nimport { getPlayerById } from \"../../api/players\";\n\n\nfunction usePlayerName(id: string) {\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getPlayerById(id).then(player => {\n      setName(player.name);\n    })\n  }, [id])\n\n  return name\n}\n\nexport default usePlayerName;\n","import React, { FC } from 'react';\nimport usePlayerName from './usePlayerName';\nimport { Link } from 'react-router-dom';\n\nexport interface PlayerNameProps {\n  readonly id: string;\n}\n\nconst PlayerName: FC<PlayerNameProps> = ({ id }) => {\n  const name = usePlayerName(id);\n\n  return  <Link to={`/players/${id}`}>{name}</Link>;\n}\n\nexport default PlayerName;","import React, { useState, useEffect, FC } from \"react\";\nimport { addGame } from \"../../api/games\";\nimport { arrayFromObject } from \"../../api/utils\";\nimport { Player } from \"../../api/types\";\nimport { getAllPlayers } from \"../../api/players\";\n\nimport \"./GameForm.css\";\n\nexport interface GameFormProps {\n  onAddGame(): void;\n}\n\nconst GameForm: FC<GameFormProps> = ({ onAddGame }) => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [player1, setPlayer1] = useState(\"Player 1\");\n  const [player2, setPlayer2] = useState(\"Player 2\");\n  const [player1Score, setPlayer1Score] = useState<number | undefined>(undefined);\n  const [player2Score, setPlayer2Score] = useState<number | undefined>(undefined);\n\n  const fetchAllPlayers = async () => {\n    const players = await getAllPlayers();\n    const sortedPlayers = arrayFromObject(players).sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n\n    setPlayers(sortedPlayers);\n  };\n\n  useEffect(() => {\n    fetchAllPlayers();\n  }, []);\n\n  const onSelect = (e: React.SyntheticEvent<HTMLSelectElement, Event>) => {\n    setPlayer1(e.currentTarget.value);\n  };\n\n  const onSelectPlayer2 = (\n    e: React.SyntheticEvent<HTMLSelectElement, Event>\n  ) => {\n    setPlayer2(e.currentTarget.value);\n  };\n\n  const onSubmitGame = () => {\n    if (!!player1Score && !!player2Score) {\n      const winnerId = player1Score > player2Score ? player1 : player2;\n\n      addGame({\n        player1Id: player1,\n        player2Id: player2,\n        player1Score,\n        player2Score,\n        winnerId\n      });\n\n      setPlayer1Score(0);\n      setPlayer2Score(0);\n      setPlayer1(\"Player 1\");\n      setPlayer2(\"Player 2\");\n\n      onAddGame();\n    }\n  };\n\n  const button =\n    player1 !== \"Player 1\" && player2 !== \"Player 2\" ? (\n      <button className=\"AddGame\" onClick={onSubmitGame}>\n        Add Game\n      </button>\n    ) : null;\n\n  return (\n    <>\n      <h2>Add Game</h2>\n      <div className=\"Forms\">\n        <div>\n          <h4>Player 1</h4>\n          <form>\n            <select onChange={onSelect} value={player1}>\n              <option value=\"Player 1\" disabled>\n                Select a player\n              </option>\n              {players.map(({ id, name }) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </select>\n            <label>\n              Score\n              <input\n                type=\"number\"\n                value={player1Score}\n                max={17}\n                min={0}\n                onChange={e => setPlayer1Score(Number(e.currentTarget.value))}\n              />\n            </label>\n          </form>\n        </div>\n        <div>\n          <h4>Player 2</h4>\n          <form>\n            <select onChange={onSelectPlayer2} value={player2}>\n              <option value=\"Player 2\" disabled>\n                Select a player\n              </option>\n              {players.map(({ id, name }) => {\n                return player1 !== id ? (\n                  <option key={id} value={id}>\n                    {name}\n                  </option>\n                ) : null;\n              })}\n            </select>\n            <label>\n              Score\n              <input\n                type=\"number\"\n                value={player2Score}\n                max={17}\n                min={0}\n                onChange={e => setPlayer2Score(Number(e.currentTarget.value))}\n              />\n            </label>\n          </form>\n        </div>\n      </div>\n      {button}\n    </>\n  );\n};\n\nexport default GameForm;\n","import React, { FC } from \"react\";\nimport { timeFromNow } from \"../../api/utils\";\n\nexport interface DateProps {\n  readonly date: string;\n}\n\nconst DateText: FC<DateProps> = ({ date }) => {\n  return (\n    <span\n      style={{\n        color: \"lightslategray\",\n        fontSize: \"12px\",\n        textTransform: \"uppercase\",\n        letterSpacing: \"0.1px\"\n      }}\n    >\n      {timeFromNow(date)}\n    </span>\n  );\n};\n\nexport default DateText;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Game } from \"../../api/types\";\nimport { arrayFromObject } from \"../../api/utils\";\nimport { getLastNGames } from \"../../api/games\";\nimport PlayerName from \"../PlayerName\";\nimport GameForm from \"../GameForm\";\n\nimport \"./Games.css\";\nimport DateText from \"../DateText\";\n\nfunction Games() {\n  const [games, setGames] = useState<Game[]>([]);\n\n  useEffect(() => {\n    fetchLast12Games();\n  }, []);\n\n  const fetchLast12Games = async () => {\n    const response = await getLastNGames(12);\n    const games = arrayFromObject(response).reverse();\n\n    setGames(arrayFromObject(games));\n  };\n\n  return (\n    <div className=\"Games\">\n      <h1>Games</h1>\n      <GameForm onAddGame={fetchLast12Games} />\n      <h2>History</h2>\n      <ul>\n        {games.map(game => (\n          <li className=\"Game\">\n            <Link to={`/games/${game.id}`}>\n              <DateText date={game.time} />\n            </Link>\n            <div>\n              <PlayerName id={game.player1Id} />{\" \"}\n              <strong>{game.player1Score}</strong> vs{\" \"}\n              <strong>{game.player2Score}</strong>{\" \"}\n              <PlayerName id={game.player2Id} />\n            </div>\n            <div>\n              Winner:{\" \"}\n              <strong>\n                <PlayerName id={game.winnerId} />\n              </strong>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Games;\n","import React, { FC } from 'react';\nimport { Player, Game } from '../../api/types';\nimport { gamesBetweenPlayers } from '../../api/utils';\n\nexport interface WinRateProps {\n  readonly player1Id: Player['id'];\n  readonly player2Id: Player['id'];\n  readonly games: Game[];\n}\n\nconst WinRate: FC<WinRateProps> = ({ player1Id, player2Id, games }) => {\n  const gamesBetweenTwoPlayers = gamesBetweenPlayers(player1Id, player2Id, games);\n  const player1Wins = gamesBetweenTwoPlayers.filter(game => game.winnerId === player1Id);\n\n  return (\n    <span>{Math.round((player1Wins.length/gamesBetweenTwoPlayers.length) * 100)}% ({gamesBetweenTwoPlayers.length})</span>\n  );\n}\n\nexport default WinRate;","import React, { FC, useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getPlayerById } from \"../../api/players\";\nimport { Player, Game } from \"../../api/types\";\nimport { getAllGames } from \"../../api/games\";\nimport { arrayFromObject, gamesByPlayerId, playersPlayerPlayed } from \"../../api/utils\";\nimport PlayerName from \"../PlayerName\";\nimport DateText from \"../DateText\";\n\nimport \"./PlayerProfile.css\";\nimport { Link } from \"react-router-dom\";\nimport WinRate from \"../WinRate\";\n\ninterface PlayerProfileRouterProps {\n  readonly id: string;\n}\n\ninterface PlayerProfileProps\n  extends RouteComponentProps<PlayerProfileRouterProps> {}\n\n\nconst PlayerProfile: FC<PlayerProfileProps> = ({ match }) => {\n  const [info, setInfo] = useState<Player>({ id: \"\", name: \"\" });\n  const [allGamesPlayed, setAllGamesPlayed] = useState<Game[]>([]);\n  const [playersPlayed, setPlayersPlayed] = useState<Player['id'][]>([]);\n  const userId = match.params.id;\n\n  const fetchAllGames = async () => {\n    const response = await getAllGames();\n    const games = response ? response : [];\n    const sortedGames = arrayFromObject(games).reverse();\n\n    setAllGamesPlayed(sortedGames);\n  };\n\n  const fetchAllOpponents = async (player: Player, allGames: Game[]) => {\n    const opponentIds = await playersPlayerPlayed(player, allGames);\n    setPlayersPlayed(arrayFromObject(opponentIds));\n  }\n  \n  useEffect(() => {\n    fetchAllGames();\n    getPlayerById(userId).then(player => {\n      setInfo(player);\n      fetchAllOpponents(player, allGamesPlayed);\n    });\n  }, [userId, allGamesPlayed]);\n  \n  const gamesPlayed = gamesByPlayerId(allGamesPlayed, userId);\n\n  return (\n    <div className=\"PlayerProfile\">\n      <h1>{info.name}</h1>\n      <h2>Win Rates</h2>\n      <div>\n        {\n          playersPlayed.map(opponentId => (\n            <div className=\"opponent\">\n              <PlayerName id={opponentId} /> - <WinRate player1Id={userId} player2Id={opponentId} games={allGamesPlayed} />\n            </div>\n          ))\n        }\n      </div>\n      <h2>Games Played</h2>\n      <div className=\"PlayerGames\">\n        {gamesPlayed.map(game => (\n          <div className=\"PlayerGame\" key={game.id}>\n            <Link to={`/games/${game.id}`}>\n              <DateText date={game.time} />\n            </Link>\n            <div className=\"Content\">\n              <div className=\"opponent\">\n                Opponent:{\" \"}\n                {game.player1Id === userId ? (\n                  <PlayerName id={game.player2Id} />\n                ) : (\n                  <PlayerName id={game.player1Id} />\n                )}\n              </div>\n              <div className=\"score\">\n                {game.winnerId === userId ? `✅` : `❌`}\n                {game.player1Score} - {game.player2Score}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerProfile;\n","import React, { FC, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport { Game } from \"../../api/types\";\nimport { getGameById, deleteGame } from \"../../api/games\";\nimport PlayerName from \"../PlayerName\";\n\nimport \"./Game.css\";\nimport { dateFormat } from \"../../api/utils\";\n\ninterface GameRouterProps {\n  readonly id: string;\n}\n\ninterface GameProps extends RouteComponentProps<GameRouterProps> {}\n\nconst GamePage: FC<GameProps> = ({ match, history }) => {\n  const gameId = match.params.id;\n  const [game, setGame] = useState<Game>();\n\n  useEffect(() => {\n    getGameById(gameId).then(game => {\n      setGame(game);\n    });\n  }, [gameId]);\n\n  if (!game) {\n    return null;\n  }\n\n  const removeGame = (gameId: string) => {\n    const verify = window.confirm('Delete Game?');\n\n    if (verify) {\n      deleteGame(gameId).then(() => {\n        history.push(\"/games\");\n      });\n    }\n  };\n\n  return (\n    <div className=\"Game\">\n      <h1>Game</h1>\n      <h4 style={{ marginBottom: 10 }}>\n        {dateFormat(game.time)}\n      </h4>\n      <div style={{ marginBottom: 20 }}>\n        <span className=\"remove\" onClick={() => removeGame(game.id)}>\n          Delete Game\n        </span>\n      </div>\n      <PlayerName id={game.player1Id} />\n      <h1>{game.player1Score}</h1>\n      <PlayerName id={game.player2Id} />\n      <h1>{game.player2Score}</h1>\n    </div>\n  );\n};\n\nexport default GamePage;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Players from \"../Players\";\nimport Home from \"../Home\";\nimport Games from \"../Games\";\nimport PlayerProfile from \"../PlayerProfile\";\nimport Game from \"../Game\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/players\" component={Players} />\n      <Route path=\"/players/:id\" component={PlayerProfile} />\n      <Route exact path=\"/games\" component={Games} />\n      <Route path=\"/games/:id\" component={Game} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <nav className=\"Nav\">\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/games\">Games</Link>\n        </li>\n        <li>\n          <Link to=\"/players\">Players</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Routes from \"./components/Routes\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Header />\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and players)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}