{"version":3,"sources":["lib/firebase/index.js","api/players.ts","api/utils.ts","components/Players/Players.tsx","components/Home/Home.tsx","api/games.ts","components/PlayerName/usePlayerName.ts","components/PlayerName/PlayerName.tsx","components/Games/Games.tsx","components/PlayerProfile/PlayerProfile.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getAllPlayers","database","ref","once","then","snapshot","val","getPlayerById","id","concat","addPlayer","_ref","name","push","set","key","arrayFromObject","obj","Object","keys","map","Players","_useState","useState","_useState2","slicedToArray","players","setPlayers","_useState3","_useState4","input","setInput","fetchAllPlayers","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","stop","apply","this","arguments","useEffect","react_default","createElement","className","value","onChange","event","currentTarget","placeholder","onClick","_ref2","react_router_dom","to","Home","getAllGames","addGame","player1Id","player2Id","player1Score","player2Score","winnerId","time","Firebase","ServerValue","TIMESTAMP","deleteGame","gameId","remove","usePlayerName","setName","player","PlayerName","Games","games","setGames","_useState5","_useState6","player1","setPlayer1","_useState7","_useState8","player2","setPlayer2","_useState9","_useState10","setPlayer1Score","fetchAllGames","_callee2","response","_context2","e","disabled","_ref3","type","max","min","Number","_ref4","game","components_PlayerName_PlayerName","style","color","PlayerProfile","match","info","setInfo","allGamesPlayed","setAllGamesPlayed","userId","params","gamesPlayed","filter","date","Date","moment","startOf","fromNow","timeFromNow","Routes","react_router","exact","path","component","Header","App","Header_Header","Routes_Routes","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.894b656c.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyIdR5rJ6p-JX5BVMeoksBURFgAs5mD5U\",\n  authDomain: \"pool-party-app.firebaseapp.com\",\n  databaseURL: \"https://pool-party-app.firebaseio.com\",\n  projectId: \"pool-party-app\",\n  storageBucket: \"pool-party-app.appspot.com\",\n  messagingSenderId: \"875916367186\",\n  appId: \"1:875916367186:web:71a4c5d40ff62bda\"\n};\n\nexport default firebase.initializeApp(firebaseConfig);","import firebase from '../lib/firebase';\n\nexport const getAllPlayers = () => {\n  return firebase\n    .database()\n    .ref('players')\n    .once('value')\n    .then(snapshot => snapshot.val());\n}\n\nexport const getPlayerById = (id: string) => {\n  return firebase\n    .database()\n    .ref(`players/${id}`)\n    .once('value')\n    .then(snapshot => snapshot.val());\n}\n\ntype AddPlayer = (playerInfo: {name: string}) => Promise<any>;\nexport const addPlayer: AddPlayer = ({ name }) => {\n  const ref = firebase\n    .database()\n    .ref('players/')\n    .push();\n\n  return ref.set({\n    id: ref.key,\n    name,\n  });\n}","import { Game, Player } from \"./types\";\nimport moment from 'moment';\n\ninterface Obj {\n  [key: string]: any;\n}\n\nexport const arrayFromObject = (obj: Obj) =>\n  Object.keys(obj).map(key => obj[key]);\n\ntype GamesByPlayerId = (games: Game[], id: Player[\"id\"]) => Game[];\n\nexport const gamesByPlayerId: GamesByPlayerId = (games, id) =>\n  games.filter(game => game.player1Id === id || game.player2Id === id);\n\nexport const timeFromNow = (time: string) => {\n  const date = new Date(time);\n  const momentFormat = moment(date);\n\n  return momentFormat.startOf().fromNow();\n}","import React, { useState, useEffect } from \"react\";\n\nimport { getAllPlayers, addPlayer } from \"../../api/players\";\nimport { arrayFromObject } from \"../../api/utils\";\nimport { Player } from \"../../api/types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Players() {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [input, setInput] = useState(\"\");\n\n  const fetchAllPlayers = async () => {\n    const players = await getAllPlayers();\n    setPlayers(arrayFromObject(players));\n  }\n\n  useEffect(() => {\n    fetchAllPlayers();\n  }, []);\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.currentTarget.value);\n  };\n\n  const submit = () => {\n    addPlayer({ name: input }).then(() => {\n      fetchAllPlayers();\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"Players\">\n      <h1>Players</h1>\n      <input\n        name=\"name\"\n        value={input}\n        onChange={onInputChange}\n        placeholder=\"Player name\"\n      />\n      <button onClick={submit}>Add Player</button>\n      <ul>\n        {players.map(({id, name}) => (\n          <li key={id}>\n            <Link to={`/players/${id}`}>{name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Players;\n","import React from 'react';\n\nfunction Home() {\n  return <h1>Home</h1>\n}\n\nexport default Home;","import * as Firebase from 'firebase';\nimport firebase from \"../lib/firebase\";\nimport { Game } from \"./types\";\nimport { Omit } from \"yargs\";\n\nexport const getAllGames = () => {\n  return firebase\n    .database()\n    .ref(\"games\")\n    .once(\"value\")\n    .then(snapshot => snapshot.val());\n};\n\nexport type AddGame = (game: Omit<Game, 'id' | 'time'>) => Promise<any>;\nexport const addGame: AddGame = ({\n  player1Id,\n  player2Id,\n  player1Score,\n  player2Score,\n  winnerId\n}) => {\n  const ref = firebase\n    .database()\n    .ref(\"games/\")\n    .push();\n\n  return ref.set({\n    time: Firebase.database.ServerValue.TIMESTAMP,\n    id: ref.key,\n    player1Id,\n    player2Id,\n    player1Score,\n    player2Score,\n    winnerId\n  });\n};\n\nexport const deleteGame = (gameId: string) => {\n  const ref = firebase.database().ref(`games/${gameId}`);\n  \n  return ref.remove();\n}\n","import { useState, useEffect } from \"react\";\nimport { getPlayerById } from \"../../api/players\";\n\n\nfunction usePlayerName(id: string) {\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    getPlayerById(id).then(player => {\n      setName(player.name);\n    })\n  }, [id])\n\n  return name\n}\n\nexport default usePlayerName;\n","import React, { FC, useState, useEffect } from 'react';\nimport usePlayerName from './usePlayerName';\n\nexport interface PlayerNameProps {\n  readonly id: string;\n}\n\nconst PlayerName: FC<PlayerNameProps> = ({ id }) => {\n  const name = usePlayerName(id);\n\n  return  <span>{name}</span>;\n}\n\nexport default PlayerName;","import React, { useState, useEffect } from \"react\";\nimport { Game, Player } from \"../../api/types\";\nimport { getAllPlayers } from \"../../api/players\";\nimport { arrayFromObject } from \"../../api/utils\";\nimport { getAllGames, addGame, deleteGame } from \"../../api/games\";\nimport PlayerName from \"../PlayerName\";\n\nfunction Games() {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [player1, setPlayer1] = useState(\"Player 1\");\n  const [player2, setPlayer2] = useState(\"Player 2\");\n  const [player1Score, setPlayer1Score] = useState(0);\n\n  const fetchAllPlayers = async () => {\n    const players = await getAllPlayers();\n\n    setPlayers(arrayFromObject(players));\n  };\n\n  const fetchAllGames = async () => {\n    const response = await getAllGames();\n    const games = response ? response : [];\n\n    setGames(arrayFromObject(games));\n  };\n\n  useEffect(() => {\n    fetchAllPlayers();\n    fetchAllGames();\n  }, []);\n\n  const onSelect = (e: React.SyntheticEvent<HTMLSelectElement, Event>) => {\n    setPlayer1(e.currentTarget.value);\n  };\n\n  const onSelectPlayer2 = (\n    e: React.SyntheticEvent<HTMLSelectElement, Event>\n  ) => {\n    setPlayer2(e.currentTarget.value);\n  };\n\n  const onSubmitGame = () => {\n    const player2Score = 17 - player1Score;\n    const winnerId = player1Score > player2Score ? player1 : player2;\n\n    addGame({\n      player1Id: player1,\n      player2Id: player2,\n      player1Score,\n      player2Score,\n      winnerId\n    });\n\n    setPlayer1Score(0);\n    setPlayer1(\"Player 1\");\n    setPlayer2(\"Player 2\");\n\n    fetchAllGames();\n  };\n\n  const removeGame = (gameId: string) => {\n    deleteGame(gameId).then(() => {\n      fetchAllGames();\n    });\n  };\n\n  return (\n    <div className=\"Games\">\n      <h1>Games</h1>\n\n      <h2>Add Game</h2>\n      <h4>Player 1</h4>\n      <form>\n        <select onChange={onSelect} value={player1}>\n          <option value=\"Player 1\" disabled>\n            Select a player\n          </option>\n          {players.map(({ id, name }) => (\n            <option key={id} value={id}>\n              {name}\n            </option>\n          ))}\n        </select>\n        <label>\n          Score\n          <input\n            type=\"number\"\n            value={player1Score}\n            max={17}\n            min={0}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setPlayer1Score(Number(e.currentTarget.value))\n            }\n          />\n        </label>\n      </form>\n\n      <h4>Player 2</h4>\n      <form>\n        <select onChange={onSelectPlayer2} value={player2}>\n          <option value=\"Player 2\" disabled>\n            Select a player\n          </option>\n          {players.map(({ id, name }) => {\n            return player1 !== id ? (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ) : null;\n          })}\n        </select>\n        Score: {17 - player1Score}\n      </form>\n\n      <button onClick={onSubmitGame}>Add Game</button>\n      <h2>History</h2>\n      <ol>\n        {games.map(game => (\n          <li className=\"Game\">\n            <div>\n              <PlayerName id={game.player1Id} />{\" \"}\n              <strong>{game.player1Score}</strong> vs{\" \"}\n              <strong>{game.player2Score}</strong>{\" \"}\n              <PlayerName id={game.player2Id} />\n            </div>\n            <div>\n              Winner:{\" \"}\n              <strong>\n                <PlayerName id={game.winnerId} />\n              </strong>\n            </div>\n            <div style={{ color: \"red\" }}>\n              <span onClick={() => removeGame(game.id)}>Remove X</span>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default Games;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getPlayerById } from \"../../api/players\";\nimport { Player, Game } from \"../../api/types\";\nimport { getAllGames } from \"../../api/games\";\nimport { arrayFromObject, gamesByPlayerId, timeFromNow } from \"../../api/utils\";\nimport PlayerName from \"../PlayerName\";\n\ninterface PlayerProfileRouterProps {\n  readonly id: string;\n}\n\ninterface PlayerProfileProps\n  extends RouteComponentProps<PlayerProfileRouterProps> {}\n\nconst PlayerProfile: FC<PlayerProfileProps> = ({ match }) => {\n  const [info, setInfo] = useState<Player>({ id: \"\", name: \"\" });\n  const [allGamesPlayed, setAllGamesPlayed] = useState<Game[]>([]);\n  const userId = match.params.id;\n\n  const fetchAllGames = async () => {\n    const response = await getAllGames();\n    const games = response ? response : [];\n\n    setAllGamesPlayed(arrayFromObject(games));\n  };\n\n  useEffect(() => {\n    fetchAllGames();\n    getPlayerById(userId).then(player => {\n      setInfo(player);\n    });\n  }, [userId]);\n\n  const gamesPlayed = gamesByPlayerId(allGamesPlayed, userId);\n  return (\n    <div className=\"PlayerProfile\">\n      <h1>{info.name}</h1>\n      <h2>Games Played</h2>\n      {gamesPlayed.map(game => (\n        <div key={game.id}>\n          {game.winnerId === userId ? `✅` : `❌`}\n          <div>{timeFromNow(game.time)}</div>\n          <div>\n            Opponent:{\" \"}\n            {game.player1Id === userId ? (\n              <PlayerName id={game.player2Id} />\n            ) : (\n              <PlayerName id={game.player1Id} />\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PlayerProfile;\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Players from \"../Players\";\nimport Home from \"../Home\";\nimport Games from \"../Games\";\nimport PlayerProfile from \"../PlayerProfile\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/players\" component={Players} />\n      <Route path=\"/players/:id\" component={PlayerProfile} />\n      <Route exact path=\"/games\" component={Games} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/games\">Games</Link>\n        </li>\n        <li>\n          <Link to=\"/players\">Players</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Routes from \"./components/Routes\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n      </div>\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and players)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}